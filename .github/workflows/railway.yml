name: Deploy to Railway

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test || echo "No tests specified"

  deploy:
    name: Deploy to Railway
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway
        run: railway up
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  verify:
    name: Verify Deployment
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Wait for deployment to complete
        run: sleep 60

      - name: Check deployment health
        run: |
          HEALTH_CHECK_URL="${{ vars.RAILWAY_PUBLIC_URL }}/api/health"
          echo "Checking health at $HEALTH_CHECK_URL"
          curl -sSf $HEALTH_CHECK_URL > health.json
          cat health.json

          # Verify response contains expected fields
          if grep -q "healthy" health.json && grep -q "true" health.json; then
            echo "✅ Health check passed"
          else
            echo "❌ Health check failed"
            exit 1
          fi

      - name: Verify database connection
        run: |
          DB_CHECK_URL="${{ vars.RAILWAY_PUBLIC_URL }}/api/health/db"
          echo "Checking database connection at $DB_CHECK_URL"
          curl -sSf $DB_CHECK_URL > db.json
          cat db.json

          # Verify database is connected
          if grep -q "connected" db.json && grep -q "true" db.json; then
            echo "✅ Database check passed"
          else
            echo "❌ Database check failed"
            exit 1
          fi